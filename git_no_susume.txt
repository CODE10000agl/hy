Git + SourceTree + GitHub　ガイダンス

１．目的
他者のコードを再利用したり、コミュニケーションに参加ができるようになるため、
ファイルバージョン管理システムとしてメジャーなGitを使えるようにする。

２．ツール
GUI + CUI クライアントの「SourceTree」
オンラインのリポジトリ保存空間「GitHub」
これらが活用するシステム「Git」

３．チュートリアル
まず、GitHubアカウントを作成し、リポジトリを作成します。
仮に、「John_Cloud」としましょう。

次に、SourceTreeをインストールします。
はじめは何も出てこないので不安ですが、まずは「リポジトリを作成」します。
そこで、「既存のリポジトリをクローン」を選び、
GitHubの対象リポジトリのURLを貼り付けます。すると、認識してくれます。
この、GitHubリポジトリに対応する、ローカルフォルダが作成されます。
場所を指定して、作成しましょう。
仮に、「John_Local」とします。

John_Localが作成されたら、John_Localに何かファイルを入れます。
あせらないでください、まずはファイルをひとつ入れます。
すると、SourceTreeの左下の方に、「作業ツリーのファイル」が表示されるはずです。
ここには、ローカルで更新したが、ローカルですらバージョン保存されていないファイルが来ます。
これを、「コミット」すると、差分が保存され、後で戻ってくることができるようになります。
ある程度コードを書いたら、コミットしましょう。
コミットの際には必ずコメントが必要なので、後でわかりやすいコメントにしましょう。

コミットしたファイルは、表示されなくなります。
コミットした途端、SourceTreeから消え、John_Cloudにも表示されず、John_Localは以前のままです。
安心してください。コミットはできています。
「プッシュ」しましょう。
プッシュすると、更新分がすべてWeb上に投げられます。
プッシュ後、GitHubページを見てください。ファイルがアップロードされているはずです。

「もうコード書いたし、フォルダがいくつかあるんだけど！？」
という方。落ち着いて、同じ構造でフォルダをJohn_Localに「作成」してください。
例としてsubjohnを作成したとしましょう。

横着しないでください。
作ったフォルダをそのままCopy+Pasteすると上手く読み込めません（でした）。

作成したディレクトリsubjohn（gitでは下位フォルダ＝ディレクトリというようです）内に、
ファイルを移動してください。今回myscript.jsを入れてみましょう。
どうでしょう。作業ツリーに、John_Local/subjohn/ myscript.js　が乗っているはずです。
これで、これからはSourceTree上でファイルの更新管理ができ、GitHubと連携できます。

なぜコミットする必要があるのか？
というと、…５．Gitの原理を御覧ください。


４．作業方法
ローカルでは、SourceTreeを使ってファイルを更新してゆく。
git add を用いて更新することで、更新履歴を保存できる。
（sourceTree: 作業ツリーに表示する）
git commit でリポジトリに保存することで、バージョンとして更新できる。
（sourceTree: コミット）
git branch で開発することで、いくつかの異なる手法を試すことができる。
（sourceTree: ブランチ）
git log やgit log --stat で、変更履歴をチェックできる。
（sourceTree: まだ探していない。どこかにCUIがある…？）

５．Gitの原理
これは、ドットインストールで勉強しましょう。
